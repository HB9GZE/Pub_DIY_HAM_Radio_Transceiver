/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &Screen1ViewBase::sliderValueChangedCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    button2.setXY(61, 175);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));

    box1.setPosition(0, -2, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(232, 227, 207));

    button1.setXY(-12, 212);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_LEFT_ID), touchgfx::Bitmap(BITMAP_LEFT_ID));
    button1.setAction(buttonCallback);

    textArea1.setXY(18, 9);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));

    slider1.setXY(18, 54);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider1.setupHorizontalSlider(2, 19, 2, 0, 310);
    slider1.setValueRange(8900, 9100);
    slider1.setValue(9000);
    slider1.setNewValueCallback(sliderValueChangedCallback);

    repeatButton1.setXY(395, 46);
    repeatButton1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    repeatButton1.setDelay(12);
    repeatButton1.setInterval(6);
    repeatButton1.setAction(buttonCallback);

    repeatButton2.setXY(395, 106);
    repeatButton2.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    repeatButton2.setDelay(12);
    repeatButton2.setInterval(6);
    repeatButton2.setAction(buttonCallback);

    toggleButton3.setXY(246, 106);
    toggleButton3.setBitmaps(touchgfx::Bitmap(BITMAP__20M_NOT_SELECTED_ID), touchgfx::Bitmap(BITMAP__20M_SELECTED_ID));
    toggleButton3.setAction(buttonCallback);

    toggleButton2.setXY(156, 106);
    toggleButton2.setBitmaps(touchgfx::Bitmap(BITMAP__40M_NOT_SELECTED_ID), touchgfx::Bitmap(BITMAP__40M_SELECTED_ID));
    toggleButton2.setAction(buttonCallback);

    toggleButton1.setXY(68, 106);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP__80M_NOT_SELECTED_ID), touchgfx::Bitmap(BITMAP__80M_SELECTED_ID));
    toggleButton1.setAction(buttonCallback);

    add(__background);
    add(button2);
    add(box1);
    add(button1);
    add(textArea1);
    add(slider1);
    add(repeatButton1);
    add(repeatButton2);
    add(toggleButton3);
    add(toggleButton2);
    add(toggleButton1);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::action1()
{

}

void Screen1ViewBase::action2()
{

}

void Screen1ViewBase::action3()
{

}

void Screen1ViewBase::action4()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction1
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
    else if (&src == &repeatButton1)
    {
        //Interaction3
        //When repeatButton1 clicked call virtual function
        //Call increaseBFO
        increaseBFO();
    }
    else if (&src == &repeatButton2)
    {
        //Interaction2
        //When repeatButton2 clicked call virtual function
        //Call decreaseBFO
        decreaseBFO();
    }
    else if (&src == &toggleButton3)
    {
        //Interaction6
        //When toggleButton3 clicked call virtual function
        //Call selected20m
        selected20m();

        //Interaction9
        //When toggleButton3 clicked execute C++ code
        //Execute C++ code
        toggleButton1.forceState(false);
        toggleButton2.forceState(false);
        toggleButton1.invalidate();
        toggleButton2.invalidate();
    }
    else if (&src == &toggleButton2)
    {
        //Interaction5
        //When toggleButton2 clicked call virtual function
        //Call selected40m
        selected40m();

        //Interaction8
        //When toggleButton2 clicked execute C++ code
        //Execute C++ code
        toggleButton1.forceState(false);
        toggleButton3.forceState(false);
        toggleButton1.invalidate();
        toggleButton3.invalidate();
    }
    else if (&src == &toggleButton1)
    {
        //Interaction4
        //When toggleButton1 clicked call virtual function
        //Call selected80m
        selected80m();

        //Interaction7
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        toggleButton2.forceState(false);
        toggleButton3.forceState(false);
        toggleButton2.invalidate();
        toggleButton3.invalidate();
    }
}

void Screen1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider1)
    {
        //Interaction10
        //When slider1 value changed call virtual function
        //Call setValue
        setValue(value);
    }
}
